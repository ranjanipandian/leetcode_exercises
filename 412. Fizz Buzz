412. Fizz Buzz

Given an integer n, return a string array answer (1-indexed) where:

answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
answer[i] == "Fizz" if i is divisible by 3.
answer[i] == "Buzz" if i is divisible by 5.
answer[i] == i (as a string) if none of the above conditions are true.
 

Example 1:

Input: n = 3
Output: ["1","2","Fizz"]
Example 2:

Input: n = 5
Output: ["1","2","Fizz","4","Buzz"]
Example 3:

Input: n = 15
Output: ["1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"]


"solution in c"


char** fizzBuzz(int n, int* returnSize) 
{
    char** answer=(char**)malloc((n+1)*sizeof(char*));
    if(answer==NULL)
    {
        *returnSize=0;
        return NULL;
    }
    for(int i=1;i<=n;i++)
    {
        if(i%3==0 && i%5==0)
        {
            answer[i-1]="FizzBuzz";
        }
        else if(i%3==0)
        {
            answer[i-1]="Fizz";
        }
        else if(i%5==0)
        {
            answer[i-1]="Buzz";
        }
        else
        {
            char str[20];
            sprintf(str,"%d",i);
            answer[i-1]=strdup(str);
        }
    }
*returnSize=n;
return answer;
}
