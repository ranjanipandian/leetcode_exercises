4. Median of Two Sorted Arrays

Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.



"solution in c"
double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size){
    int nums3Size = nums1Size + nums2Size;
    int* result = (int*)malloc(nums3Size * sizeof(int));
    if (result == NULL) {
        return -1.0;
    }
    int i, j, k;
    i = j = k = 0;
//sort the 2 arrays
    while (i < nums1Size && j < nums2Size) {
        if (nums1[i] <= nums2[j]) {
            result[k++] = nums1[i++];
        } else {
            result[k++] = nums2[j++];
        }
    }
// merge the 2 arrays
    while (i < nums1Size) {
        result[k++] = nums1[i++];
    }
    while (j < nums2Size) {
        result[k++] = nums2[j++];
    }
// find the medians
    double median;
    if (nums3Size % 2 == 0) {
        median = (result[nums3Size / 2 - 1] + result[nums3Size / 2]) / 2.0;
    } else {
        median = result[nums3Size / 2];
    }
    free(result); 
    return median;
}
