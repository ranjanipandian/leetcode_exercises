3033. Modify the Matrix

Given a 0-indexed m x n integer matrix matrix, create a new 0-indexed matrix called answer. Make answer equal to matrix, then replace each element with the value -1 with the maximum element in its respective column.

Return the matrix answer.

Example 1:


Input: matrix = [[1,2,-1],[4,-1,6],[7,8,9]]
Output: [[1,2,9],[4,8,6],[7,8,9]]
Explanation: The diagram above shows the elements that are changed (in blue).
- We replace the value in the cell [1][1] with the maximum value in the column 1, that is 8.
- We replace the value in the cell [0][2] with the maximum value in the column 2, that is 9.
Example 2:


Input: matrix = [[3,-1],[5,2]]
Output: [[3,2],[5,2]]
Explanation: The diagram above shows the elements that are changed (in blue).
int** modifiedMatrix(int** matrix, int matrixSize, int* matrixColSize, int* returnSize, int** returnColumnSizes) 
{
    int r=matrixSize;
    int c=*matrixColSize;
    int** modify=(int**)malloc(r*sizeof(int*));
    int** answer=(int**)malloc(r*sizeof(int*));
    for(int i=0;i<r;i++) 
    {
        modify[i]=(int*)malloc(c*sizeof(int));
        answer[i]=(int*)malloc(c*sizeof(int));
    }
    for(int j=0;j<c;j++) 
    {
        int max=INT_MIN;
        for(int i=0;i<r;i++) 
        {
            if (matrix[i][j]>max) 
            {
                max=matrix[i][j];
            }
        }
        for(int i=0;i<r;i++)
        {
            modify[i][j]=max;
        }
    }
    for(int i=0;i<r;i++) 
    {
        for(int j=0;j<c;j++)
         {
            answer[i][j]=matrix[i][j];
        }
    }
  
    for(int i=0;i<r;i++) 
    {
        for(int j=0;j<c;j++) 
        {
            if(answer[i][j]==-1) 
            {
                answer[i][j]=modify[i][j];
            }
        }
    }
*returnSize=r;
*returnColumnSizes=(int*)malloc(r*sizeof(int));
for(int i=0;i<r;i++) 
{
    (*returnColumnSizes)[i]=c;
}
for(int i=0;i<r;i++) 
{
    free(modify[i]);
}
free(modify);
return answer;
}
